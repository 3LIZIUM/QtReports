language: cpp

compiler: 
  - gcc
  - clang

os:
  - linux
  
#sudo: false
  
cache:
  apt: true
  directories:
    - $HOME/.cache/pip

branches:
  only:
    - master
    - develop
    - /^.*travis.*$/
    
notifications:
  email: false
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/678b18ebcfb342041cf8
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always

#addons:
#  apt:
#    sources:
#    - ubuntu-toolchain-r-test
#    - ubuntu-sdk-team
#    packages:
#    - gcc-4.8
#    - g++-4.8
#    - clang
#    - qtbase5-dev
#    - qt5-default
#    - qttools5-dev-tools
  
env:
  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release
    - BUILD_TYPE=Coverage

before_install:
  - sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa
  - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
  - sudo apt-add-repository --yes ppa:beineri/opt-qt551
  - sudo apt-get update -qq
#  - if [ "$CXX" = "clang++" ]; then sudo apt-add-repository --yes ppa:beineri/opt-qt551; fi
# - sudo apt-get install gcc-4.8 g++-4.8 clang
  - if [ "$CXX" = "g++" ]; then sudo apt-get install gcc-4.8 g++-4.8 qtbase5-dev qt5-default qttools5-dev-tools; fi
  - if [ "$CXX" = "clang++" ]; then sudo apt-get -f install clang qt-latest qt5-qmake qtchooser; fi # qtcreator-latest 
  - source /opt/qt55/bin/qt55-env.sh
#  - source .travis/${TRAVIS_OS_NAME}/before_install.sh
#  - pip install --user cpp-coveralls
 
install:
#  - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8" GCOV="gcov-4.8"; fi
#  - export QMAKE_CC="$CC"
#  - export QMAKE_CXX="$CXX"
   
# before_script:
#  - mkdir -p build
#  - cd build
#  - cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_PREFIX_PATH=${DEPS_PREFIX_PATH}
  
script:
  - export QTDIR="/opt/qt55/include"
  - cd QtReports/QtReports
  - QTDIR=/opt/qt55/include qmake --version
  - if [ "$CXX" = "g++" ]; then qmake qtreports.pro; fi
  - if [ "$CXX" = "clang++" ]; then qmake -spec linux-clang qtreports.pro; fi # -spec linux-clang
  - make
#  - cmake --build . --target all -- --keep-going
#  - cmake --build . --target check

#after_success:
#  - if [ "$BUILD_TYPE" == "Coverage" ]; then ~/.local/bin/coveralls --repo_token "${COVERALLS_IO_TOKEN}" --gcov "$GCOV" --exclude build/gtest -E ".*CMake.*CompilerId.c" --gcov-options "\-lp" -r ../; fi
